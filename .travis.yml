---
# Copyright (c) 2019-2021 Petr Vorel <pvorel@suse.cz>

dist: bionic
sudo: required
language: c
services:
    - docker

matrix:
    include:
        # cross compilation
        # NOTE: cannot set cross compiler as compiler variable (meson tests also native build)
        - os: linux
          env: DISTRO=debian:unstable VARIANT=cross-compile ARCH=arm64
          compiler: gcc

        - os: linux
          env: DISTRO=debian:testing VARIANT=cross-compile ARCH=ppc64el
          compiler: gcc

        - os: linux
          env: DISTRO=debian:testing VARIANT=cross-compile ARCH=s390x
          compiler: gcc

        # musl (native)
        - os: linux
          # Message: WARNING: xsltproc: cannot process http://docbook.sourceforge.net/release/xsl-ns/current/manpages/docbook.xsl
          # doc/meson.build:70:1: ERROR: Problem encountered: Docs cannot be built: xsltproc does not work correctly
          env: DISTRO=alpine:latest EXTRA_BUILD_OPTS='-DBUILD_HTML_MANS=false -DBUILD_MANS=false'
          compiler: gcc

        # glibc (gcc/clang)
        - os: linux
          env: DISTRO=opensuse/tumbleweed CONTAINER=podman
          compiler: gcc

        - os: linux
          env: DISTRO=opensuse/leap
          compiler: clang

        - os: linux
          env: DISTRO=ubuntu:xenial EXTRA_BUILD_OPTS='-DUSE_GETTEXT=false'
          compiler: clang

        - os: linux
          env: DISTRO=ubuntu:groovy
          compiler: gcc

        - os: linux
          env: DISTRO=fedora:latest CONTAINER=podman
          compiler: clang

        - os: linux
          env: DISTRO=centos:7
          compiler: gcc

        - os: linux
          env: DISTRO=debian:testing
          compiler: gcc

        - os: linux
          env: DISTRO=debian:stable
          compiler: gcc

        - os: linux
          env: DISTRO=debian:oldstable
          compiler: clang

before_install:
    - CONTAINER="${CONTAINER:-docker}"
    # distros with glibc >=2.33 require podman and newest runc due docker faccessat2 incompatibility
    - >
        if [ "$CONTAINER" = "podman" ]; then
            # podman
            CONTAINER_ARGS="--runtime=/usr/bin/runc"
            . /etc/os-release
            sudo sh -c "echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"
            wget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_${VERSION_ID}/Release.key -O- | sudo apt-key add -
            sudo apt update
            sudo apt -y install podman slirp4netns

            # runc
            sudo curl -L https://github.com/opencontainers/runc/releases/download/v1.0.0-rc93/runc.amd64 -o /usr/bin/runc
            sudo chmod +x /usr/bin/runc
        fi
    - DIR="/usr/src/iputils"
    - printf "FROM $DISTRO\nRUN mkdir -p $DIR\nWORKDIR $DIR\nCOPY . $DIR\n" > Dockerfile
    - echo "cat Dockerfile"; cat Dockerfile
    - $CONTAINER $CONTAINER_ARGS build -t iputils .

script:
    - INSTALL="${DISTRO%%:*}"
    - INSTALL="${INSTALL%%/*}"
    - DISTRO_VERSION="${DISTRO#*:}"
    - case $VARIANT in cross-compile*) BUILD="cross";; i386) BUILD="32";; *) BUILD="native";; esac
    - $CONTAINER $CONTAINER_ARGS run -it iputils /bin/sh -c "cd ci && DISTRO_VERSION=\"$DISTRO_VERSION\" ./$INSTALL.sh && if [ \"$VARIANT\" ]; then ARCH=\"$ARCH\" ./$INSTALL.$VARIANT.sh; fi && CC=$CC EXTRA_BUILD_OPTS=\"$EXTRA_BUILD_OPTS\" ../build.sh"
